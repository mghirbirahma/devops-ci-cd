pipeline {
    agent none
    environment {
// Ajouter la variable dh_cred comme variables d'authentification
D      OCKERHUB_CREDENTIALS = credentials('dh_cred')
}
    triggers {
      pollSCM('*/5 * * * *') // VÃ©rifier toutes les 5 minutes
    }   
    stages {
      stage('Checkout'){
      agent any
      steps{
        checkout scm
       }
     }
     stage('Init'){
        agent any
      steps{
          // Permet l'authentification
         sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
        }      
     }       
     stage('Build Backend'){
        agent any
        when{
            changest "** /backend/*.*"
            beforeagent true 
        }
       steps {
        dir('Backend'){
                sh 'docker build -t DOCKERHUB_CREDENTIALS_USR/produit_backend:$BUILD_ID .'
                sh 'docker push $DOCKERHUB_CREDENTIALS_USR/produit_backend:$BUILD_ID'
                sh 'docker rmi $DOCKERHUB_CREDENTIALS_USR/produit_backend:$BUILD_ID'
            } 
        }
        
     }
     stage('Build Frontend'){
        agent any
        when{
            changest "** /frontend/*.*"
            beforeagent true 
        }
     steps {
      dir('frontend'){
         sh 'docker build -t DOCKERHUB_CREDENTIALS_USR/produit_fronend:$BUILD_ID .'
         sh 'docker push $DOCKERHUB_CREDENTIALS_USR/produit_frontend:$BUILD_ID'
         sh 'docker rmi $DOCKERHUB_CREDENTIALS_USR/produit_frontend:$BUILD_ID'
        } 
        }
        
     }
     stage('logout'){
     steps {
         
         sh 'docker logout'
        } 
     }
    }
}